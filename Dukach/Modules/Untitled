diff --git a/Dukach.xcodeproj/project.pbxproj b/Dukach.xcodeproj/project.pbxproj
index fe9c0d7..1bf75a1 100644
--- a/Dukach.xcodeproj/project.pbxproj
+++ b/Dukach.xcodeproj/project.pbxproj
@@ -7,6 +7,9 @@
 	objects = {
 
 /* Begin PBXBuildFile section */
+		3717BCD62A49D18700E01EAD /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3717BCD52A49D18700E01EAD /* GoogleService-Info.plist */; };
+		372DBB002A42FE13003B7B37 /* AuthViewControllerViewModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 372DBAFF2A42FE13003B7B37 /* AuthViewControllerViewModel.swift */; };
+		372DBB022A431CBC003B7B37 /* Constants.swift in Sources */ = {isa = PBXBuildFile; fileRef = 372DBB012A431CBC003B7B37 /* Constants.swift */; };
 		377296EA2A1B5EC600459C81 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 377296E92A1B5EC600459C81 /* AppDelegate.swift */; };
 		377296EC2A1B5EC600459C81 /* SceneDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 377296EB2A1B5EC600459C81 /* SceneDelegate.swift */; };
 		377296EE2A1B5EC600459C81 /* ViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 377296ED2A1B5EC600459C81 /* ViewController.swift */; };
@@ -14,12 +17,15 @@
 		377296F32A1B5EC800459C81 /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 377296F22A1B5EC800459C81 /* Assets.xcassets */; };
 		377296F62A1B5EC800459C81 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 377296F42A1B5EC800459C81 /* LaunchScreen.storyboard */; };
 		377296FF2A1B63AA00459C81 /* AuthViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 377296FE2A1B63AA00459C81 /* AuthViewController.swift */; };
-		377297022A1B67B900459C81 /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 377297012A1B67B800459C81 /* GoogleService-Info.plist */; };
 		377297052A1B69E300459C81 /* FirebaseAuth in Frameworks */ = {isa = PBXBuildFile; productRef = 377297042A1B69E300459C81 /* FirebaseAuth */; };
 		377297072A1B69E300459C81 /* FirebaseDatabase in Frameworks */ = {isa = PBXBuildFile; productRef = 377297062A1B69E300459C81 /* FirebaseDatabase */; };
+		378C712E2A618F56002E5989 /* DatabaseManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = 378C712D2A618F56002E5989 /* DatabaseManager.swift */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXFileReference section */
+		3717BCD52A49D18700E01EAD /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
+		372DBAFF2A42FE13003B7B37 /* AuthViewControllerViewModel.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AuthViewControllerViewModel.swift; sourceTree = "<group>"; };
+		372DBB012A431CBC003B7B37 /* Constants.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Constants.swift; sourceTree = "<group>"; };
 		377296E62A1B5EC600459C81 /* Dukach.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Dukach.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		377296E92A1B5EC600459C81 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = "<group>"; };
 		377296EB2A1B5EC600459C81 /* SceneDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SceneDelegate.swift; sourceTree = "<group>"; };
@@ -29,7 +35,7 @@
 		377296F52A1B5EC800459C81 /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/LaunchScreen.storyboard; sourceTree = "<group>"; };
 		377296F72A1B5EC800459C81 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
 		377296FE2A1B63AA00459C81 /* AuthViewController.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AuthViewController.swift; sourceTree = "<group>"; };
-		377297012A1B67B800459C81 /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
+		378C712D2A618F56002E5989 /* DatabaseManager.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = DatabaseManager.swift; path = Resources/DatabaseManager.swift; sourceTree = "<group>"; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -45,6 +51,15 @@
 /* End PBXFrameworksBuildPhase section */
 
 /* Begin PBXGroup section */
+		372DBAFE2A42FD60003B7B37 /* Auth */ = {
+			isa = PBXGroup;
+			children = (
+				377296FE2A1B63AA00459C81 /* AuthViewController.swift */,
+				372DBAFF2A42FE13003B7B37 /* AuthViewControllerViewModel.swift */,
+			);
+			path = Auth;
+			sourceTree = "<group>";
+		};
 		377296DD2A1B5EC600459C81 = {
 			isa = PBXGroup;
 			children = (
@@ -71,8 +86,10 @@
 				377296F22A1B5EC800459C81 /* Assets.xcassets */,
 				377296F42A1B5EC800459C81 /* LaunchScreen.storyboard */,
 				377296EF2A1B5EC600459C81 /* Main.storyboard */,
+				3717BCD52A49D18700E01EAD /* GoogleService-Info.plist */,
 				377296F72A1B5EC800459C81 /* Info.plist */,
-				377297012A1B67B800459C81 /* GoogleService-Info.plist */,
+				372DBB012A431CBC003B7B37 /* Constants.swift */,
+				378C712D2A618F56002E5989 /* DatabaseManager.swift */,
 			);
 			path = Dukach;
 			sourceTree = "<group>";
@@ -80,7 +97,7 @@
 		377296FD2A1B5FED00459C81 /* Modules */ = {
 			isa = PBXGroup;
 			children = (
-				377296FE2A1B63AA00459C81 /* AuthViewController.swift */,
+				372DBAFE2A42FD60003B7B37 /* Auth */,
 			);
 			path = Modules;
 			sourceTree = "<group>";
@@ -151,7 +168,7 @@
 			buildActionMask = 2147483647;
 			files = (
 				377296F62A1B5EC800459C81 /* LaunchScreen.storyboard in Resources */,
-				377297022A1B67B900459C81 /* GoogleService-Info.plist in Resources */,
+				3717BCD62A49D18700E01EAD /* GoogleService-Info.plist in Resources */,
 				377296F32A1B5EC800459C81 /* Assets.xcassets in Resources */,
 				377296F12A1B5EC600459C81 /* Main.storyboard in Resources */,
 			);
@@ -164,10 +181,13 @@
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				372DBB002A42FE13003B7B37 /* AuthViewControllerViewModel.swift in Sources */,
 				377296FF2A1B63AA00459C81 /* AuthViewController.swift in Sources */,
 				377296EE2A1B5EC600459C81 /* ViewController.swift in Sources */,
 				377296EA2A1B5EC600459C81 /* AppDelegate.swift in Sources */,
 				377296EC2A1B5EC600459C81 /* SceneDelegate.swift in Sources */,
+				372DBB022A431CBC003B7B37 /* Constants.swift in Sources */,
+				378C712E2A618F56002E5989 /* DatabaseManager.swift in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
diff --git a/Dukach/Base.lproj/Main.storyboard b/Dukach/Base.lproj/Main.storyboard
index 5978497..23a3b9e 100644
--- a/Dukach/Base.lproj/Main.storyboard
+++ b/Dukach/Base.lproj/Main.storyboard
@@ -15,8 +15,22 @@
                     <view key="view" contentMode="scaleToFill" id="8bC-Xf-vdC">
                         <rect key="frame" x="0.0" y="0.0" width="430" height="932"/>
                         <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
+                        <subviews>
+                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="uCF-PW-rH3">
+                                <rect key="frame" x="177.66666666666666" y="448.66666666666669" width="75" height="35"/>
+                                <state key="normal" title="Button"/>
+                                <buttonConfiguration key="configuration" style="plain" title="Button"/>
+                                <connections>
+                                    <action selector="logOutButton:" destination="BYZ-38-t0r" eventType="touchUpInside" id="PKr-aS-f7q"/>
+                                </connections>
+                            </button>
+                        </subviews>
                         <viewLayoutGuide key="safeArea" id="6Tk-OE-BBY"/>
                         <color key="backgroundColor" systemColor="systemBackgroundColor"/>
+                        <constraints>
+                            <constraint firstItem="uCF-PW-rH3" firstAttribute="centerY" secondItem="8bC-Xf-vdC" secondAttribute="centerY" id="8t1-qT-DdE"/>
+                            <constraint firstItem="uCF-PW-rH3" firstAttribute="centerX" secondItem="8bC-Xf-vdC" secondAttribute="centerX" id="h4h-jW-0lI"/>
+                        </constraints>
                     </view>
                 </viewController>
                 <placeholder placeholderIdentifier="IBFirstResponder" id="dkx-z0-nzr" sceneMemberID="firstResponder"/>
@@ -44,43 +58,51 @@
                                 <nil key="highlightedColor"/>
                             </label>
                             <stackView opaque="NO" contentMode="scaleToFill" fixedFrame="YES" axis="vertical" spacing="23" translatesAutoresizingMaskIntoConstraints="NO" id="ZpU-EL-cNh">
-                                <rect key="frame" x="24" y="180" width="41.333333333333343" height="321.33333333333331"/>
+                                <rect key="frame" x="24" y="180" width="75" height="378.66666666666674"/>
                                 <subviews>
                                     <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Label" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="c5c-r2-4hk">
-                                        <rect key="frame" x="0.0" y="0.0" width="41.333333333333336" height="20.333333333333332"/>
+                                        <rect key="frame" x="0.0" y="0.0" width="75" height="20.333333333333332"/>
                                         <fontDescription key="fontDescription" type="system" pointSize="17"/>
                                         <nil key="textColor"/>
                                         <nil key="highlightedColor"/>
                                     </label>
                                     <textField opaque="NO" contentMode="scaleToFill" horizontalHuggingPriority="248" contentHorizontalAlignment="left" contentVerticalAlignment="center" borderStyle="roundedRect" textAlignment="natural" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="mUH-1N-kjr">
-                                        <rect key="frame" x="0.0" y="43.333333333333336" width="41.333333333333336" height="34.000000000000007"/>
+                                        <rect key="frame" x="0.0" y="43.333333333333336" width="75" height="34.000000000000007"/>
                                         <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                         <textInputTraits key="textInputTraits"/>
                                     </textField>
                                     <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Label" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="01W-2t-05i">
-                                        <rect key="frame" x="0.0" y="100.33333333333333" width="41.333333333333336" height="20.333333333333329"/>
+                                        <rect key="frame" x="0.0" y="100.33333333333333" width="75" height="20.333333333333329"/>
                                         <fontDescription key="fontDescription" type="system" pointSize="17"/>
                                         <nil key="textColor"/>
                                         <nil key="highlightedColor"/>
                                     </label>
                                     <textField opaque="NO" contentMode="scaleToFill" horizontalHuggingPriority="248" contentHorizontalAlignment="left" contentVerticalAlignment="center" borderStyle="roundedRect" textAlignment="natural" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="Nqf-3V-myH">
-                                        <rect key="frame" x="0.0" y="143.66666666666666" width="41.333333333333336" height="34"/>
+                                        <rect key="frame" x="0.0" y="143.66666666666666" width="75" height="34"/>
                                         <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                         <textInputTraits key="textInputTraits"/>
                                     </textField>
                                     <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Label" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="uAI-77-EfM">
-                                        <rect key="frame" x="0.0" y="200.66666666666666" width="41.333333333333336" height="20.333333333333343"/>
+                                        <rect key="frame" x="0.0" y="200.66666666666666" width="75" height="20.333333333333343"/>
                                         <fontDescription key="fontDescription" type="system" pointSize="17"/>
                                         <nil key="textColor"/>
                                         <nil key="highlightedColor"/>
                                     </label>
                                     <textField opaque="NO" contentMode="scaleToFill" horizontalHuggingPriority="248" contentHorizontalAlignment="left" contentVerticalAlignment="center" borderStyle="roundedRect" textAlignment="natural" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="dpB-HW-mBD">
-                                        <rect key="frame" x="0.0" y="244" width="41.333333333333336" height="34"/>
+                                        <rect key="frame" x="0.0" y="244" width="75" height="34"/>
                                         <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                         <textInputTraits key="textInputTraits"/>
                                     </textField>
+                                    <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="xi5-PN-KMl">
+                                        <rect key="frame" x="0.0" y="301" width="75" height="34.333333333333314"/>
+                                        <state key="normal" title="Button"/>
+                                        <buttonConfiguration key="configuration" style="plain" title="Button"/>
+                                        <connections>
+                                            <action selector="authButton:" destination="dNQ-q9-bdf" eventType="touchUpInside" id="6pN-oe-EAq"/>
+                                        </connections>
+                                    </button>
                                     <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Label" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="1Zj-bY-5gz">
-                                        <rect key="frame" x="0.0" y="301" width="41.333333333333336" height="20.333333333333314"/>
+                                        <rect key="frame" x="0.0" y="358.33333333333331" width="75" height="20.333333333333314"/>
                                         <fontDescription key="fontDescription" type="system" pointSize="17"/>
                                         <nil key="textColor"/>
                                         <nil key="highlightedColor"/>
@@ -92,6 +114,7 @@
                         <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                     </view>
                     <connections>
+                        <outlet property="authButton" destination="xi5-PN-KMl" id="ziu-IL-TI3"/>
                         <outlet property="authEmailTextField" destination="Nqf-3V-myH" id="6zG-EP-LEE"/>
                         <outlet property="authMailLabel" destination="01W-2t-05i" id="N9E-PA-z8N"/>
                         <outlet property="authNameLabel" destination="c5c-r2-4hk" id="yjv-bX-y1z"/>
diff --git a/Dukach/Constants.swift b/Dukach/Constants.swift
new file mode 100644
index 0000000..988ac92
--- /dev/null
+++ b/Dukach/Constants.swift
@@ -0,0 +1,43 @@
+import Foundation
+
+struct Const {
+   
+    enum userAuthErrorMessage:String{
+        case emptyField = "Not all fields are filled"
+    }
+    
+    enum authSwitcher{
+        case registration
+        case login
+    }
+    static let unownName = "unown name"
+
+    enum entity:String{
+        case movie = "&entity=movie"
+    }
+
+
+    enum actionCase{
+        case mediaInRealm
+        case needSaveInRealm
+        case needRemoveFromRealm
+    }
+    
+
+    
+    struct Request {
+        
+        static let errorMovieURL = "https://example.com/my-example-video.m3u8"
+
+        static  let baseUrl = "https://itunes.apple.com/search?term="
+    }
+    
+    
+
+    
+    static func bildSearchMovieUrl(SearchText:String) -> String{
+        let SearchText = SearchText.replacingOccurrences(of: " ", with: "+")
+        let url:String = Const.Request.baseUrl+SearchText+Const.entity.movie.rawValue
+            return url
+        }
+}
diff --git a/Dukach/GoogleService-Info.plist b/Dukach/GoogleService-Info.plist
new file mode 100644
index 0000000..fbb6d2c
--- /dev/null
+++ b/Dukach/GoogleService-Info.plist
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>CLIENT_ID</key>
+	<string>385308479305-jh6jb51td0pc7qflhr70pdni46olmeof.apps.googleusercontent.com</string>
+	<key>REVERSED_CLIENT_ID</key>
+	<string>com.googleusercontent.apps.385308479305-jh6jb51td0pc7qflhr70pdni46olmeof</string>
+	<key>API_KEY</key>
+	<string>AIzaSyDCaTZ3LtUhtrZ0w-0K3oHk0v2vSSveBSw</string>
+	<key>GCM_SENDER_ID</key>
+	<string>385308479305</string>
+	<key>PLIST_VERSION</key>
+	<string>1</string>
+	<key>BUNDLE_ID</key>
+	<string>Gerashkl.Dukach</string>
+	<key>PROJECT_ID</key>
+	<string>dukach-f0f86</string>
+	<key>STORAGE_BUCKET</key>
+	<string>dukach-f0f86.appspot.com</string>
+	<key>IS_ADS_ENABLED</key>
+	<false></false>
+	<key>IS_ANALYTICS_ENABLED</key>
+	<false></false>
+	<key>IS_APPINVITE_ENABLED</key>
+	<true></true>
+	<key>IS_GCM_ENABLED</key>
+	<true></true>
+	<key>IS_SIGNIN_ENABLED</key>
+	<true></true>
+	<key>GOOGLE_APP_ID</key>
+	<string>1:385308479305:ios:0857d5387363d117d1d498</string>
+</dict>
+</plist>
\ No newline at end of file
diff --git a/Dukach/Modules/AuthViewController.swift b/Dukach/Modules/Auth/AuthViewController.swift
similarity index 63%
rename from Dukach/Modules/AuthViewController.swift
rename to Dukach/Modules/Auth/AuthViewController.swift
index 398f7d9..64c672d 100644
--- a/Dukach/Modules/AuthViewController.swift
+++ b/Dukach/Modules/Auth/AuthViewController.swift
@@ -6,25 +6,21 @@ import Firebase
 
 class AuthViewController: UIViewController {
     
-    
 
     @IBOutlet weak var authStackView: UIStackView!
     @IBOutlet weak var authTitleLabel: UILabel!
     
     @IBOutlet weak var authNameLabel: UILabel!
-    
     @IBOutlet weak var authMailLabel: UILabel!
-    
     @IBOutlet weak var authPassLabel: UILabel!
-    
     @IBOutlet weak var authTermsConditionLabel: UILabel!
     
     
     @IBOutlet weak var authNameTextField: UITextField!
-    
     @IBOutlet weak var authEmailTextField: UITextField!
-    
     @IBOutlet weak var authPassTextField: UITextField!
+    
+    @IBOutlet weak var authButton: UIButton!
 
     private let scrollView: UIScrollView = {
         let scrollView = UIScrollView()
@@ -33,17 +29,62 @@ class AuthViewController: UIViewController {
         scrollView.layer.borderColor = UIColor.red.cgColor
         return scrollView
     }()
+
     
     weak var delegate: AuthDelegate?
-
+//    var authSwitcher : Const.authSwitcher = .registration
+    var authSwitcher : Const.authSwitcher = .login
     
     override func viewDidLoad() {
         super.viewDidLoad()
-
+        
         setupInterface()
         
 
     }
+    
+    @IBAction func authButton(_ sender: Any) {
+        print("click")
+
+        guard let email = authEmailTextField.text, let password = authPassTextField.text, !email.isEmpty, !password.isEmpty else {
+            present(alertUserAuthError(authError:Const.userAuthErrorMessage.emptyField.rawValue), animated: true)
+            return
+        }
+        authEnterButtonPresed(authType: authSwitcher)
+        
+        authenticateUser()
+
+        
+        
+        func authEnterButtonPresed(authType:Const.authSwitcher){ //перейменувати і зробити у VM
+            if authType == .registration{
+                registerUser(name: authNameTextField.text ?? Const.unownName, email: email, password: password)
+
+            }else{
+                signInUser(email: email, password: password)
+            }
+        }
+        
+        
+    }
+//    @IBAction func authButton(_ sender: UIButton) {
+//           guard let email = authEmailTextField.text, let password = authPassTextField.text, !email.isEmpty, !password.isEmpty else {
+//               present(alertUserAuthError(authError: Const.userAuthErrorMessage.emptyField.rawValue), animated: true)
+//               return
+//           }
+//        print("click2")
+//           authEnterButtonPresed(authType: authSwitcher)
+           
+           
+
+//           func authEnterButtonPresed(authType:Const.authSwitcher){ //перейменувати і зробити у VM
+//               if authType == .registration{
+//                   registerUser(name: nameField.text ?? Const.unownName, email: email, password: password)
+//               }else{
+//                   signInUser(email: email, password: password)
+//               }
+//           }
+//       }
 
 
 // MARK: - Navigation
@@ -51,7 +92,9 @@ class AuthViewController: UIViewController {
     private func authenticateUser() {
          // Логіка авторизації
          // При успішній авторизації викликаємо метод делегата
-         delegate?.userDidAuthenticate()
+        print ("main VC")
+        self.delegate?.userDidAuthenticate()
+//         delegate?.userDidAuthenticate()
      }
 
      private func signOutUser() {
@@ -71,12 +114,13 @@ protocol AuthDelegate: AnyObject {
 
 // MARK: - setupInterface AuthViewController
 extension AuthViewController{
-    
+
     func setupInterface() {
         setupScrollView()
         setupAuthStackView()
         setupLabels()
         setupTextFields()
+        setupAuthButton()
         addSubviews()
         setupConstraints()
     }
@@ -103,6 +147,7 @@ extension AuthViewController{
         setupTextField(authNameTextField, placeholder: "Your Name")
         setupTextField(authEmailTextField, placeholder: "Your Email")
         setupTextField(authPassTextField, placeholder: "********", isSecureTextEntry: true)
+        
     }
 
     private func setupTextField(_ textField: UITextField, placeholder: String, isSecureTextEntry: Bool = false) {
@@ -115,6 +160,14 @@ extension AuthViewController{
         textField.placeholder = placeholder
         textField.isSecureTextEntry = isSecureTextEntry
     }
+    
+    private func setupAuthButton() {
+//        authButton = UIButton(type: .system)
+        authButton.setTitle("Зареєструватися", for: .normal)
+        authButton.addTarget(self, action: #selector(getter: authButton), for: .touchUpInside)
+        authButton.layer.cornerRadius = 20
+        
+    }
 
     private func addSubviews() {
         authStackView.addArrangedSubview(authNameLabel)
@@ -123,7 +176,7 @@ extension AuthViewController{
         authStackView.addArrangedSubview(authEmailTextField)
         authStackView.addArrangedSubview(authPassLabel)
         authStackView.addArrangedSubview(authPassTextField)
-       
+        authStackView.addArrangedSubview(authButton)
         
         scrollView.addSubview(authStackView)
         view.addSubview(scrollView)
@@ -155,8 +208,36 @@ extension AuthViewController{
             authNameLabel.leadingAnchor.constraint(equalTo: authStackView.leadingAnchor),
             authNameLabel.trailingAnchor.constraint(equalTo: authStackView.trailingAnchor),
             authMailLabel.leadingAnchor.constraint(equalTo: authStackView.leadingAnchor),
-            authMailLabel.trailingAnchor.constraint(equalTo: authStackView.trailingAnchor)
+            authMailLabel.trailingAnchor.constraint(equalTo: authStackView.trailingAnchor),
+//
+//            authButton.centerXAnchor.constraint(equalTo: view.centerXAnchor),
+//            authButton.centerYAnchor.constraint(equalTo: view.centerYAnchor),
+            authButton.widthAnchor.constraint(equalToConstant: 100),
+            authButton.heightAnchor.constraint(equalToConstant: 40)
 
         ])
     }
 }
+
+
+extension AuthViewController: UITextFieldDelegate{
+    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
+        if textField == authEmailTextField {
+            authPassTextField.becomeFirstResponder()
+        }else if
+            textField == authPassTextField{
+//            authButton
+        }
+        return true
+    }
+    
+    func alertUserAuthError(authError:String) -> UIAlertController {
+        print("error")
+        let alert = UIAlertController(title: "Message", message: authError, preferredStyle: .alert)
+        alert.addAction(UIAlertAction(title: "OK", style: .cancel))
+        return alert
+    }
+    
+    
+    
+}
diff --git a/Dukach/Modules/Auth/AuthViewControllerViewModel.swift b/Dukach/Modules/Auth/AuthViewControllerViewModel.swift
new file mode 100644
index 0000000..c7ce5e4
--- /dev/null
+++ b/Dukach/Modules/Auth/AuthViewControllerViewModel.swift
@@ -0,0 +1,37 @@
+import Foundation
+import Firebase
+
+
+extension AuthViewController {
+   
+    func registerUser(name:String, email:String, password:String) {
+        Auth.auth().createUser(withEmail: email, password: password) { authDataResult, error in
+            guard let result = authDataResult, error == nil else{
+                let authError = error?.localizedDescription ?? "something wrong"
+                self.present(self.alertUserAuthError(authError: authError ), animated: true)
+                return
+                    }
+                    let ref = Database.database().reference().child("users")
+                    ref.child(result.user.uid).updateChildValues(["name" : name,"email" : email, ])
+                    self.dismiss(animated: true)
+
+            }
+        
+        }
+    func signInUser(email:String, password:String){
+        Auth.auth().signIn(withEmail: email, password: password) { authDataResult, error in
+            guard let result = authDataResult, error == nil else{
+                let authError = error?.localizedDescription ?? "something wrong"
+                self.present(self.alertUserAuthError(authError: authError ), animated: true)
+                return
+            }
+            let user = result.user
+            self.dismiss(animated: true)
+        }
+    }
+}
+
+
+class AuthViewControllerViewModel{
+    
+}
diff --git a/Dukach/Resources/DatabaseManager.swift b/Dukach/Resources/DatabaseManager.swift
new file mode 100644
index 0000000..76bee50
--- /dev/null
+++ b/Dukach/Resources/DatabaseManager.swift
@@ -0,0 +1,8 @@
+//
+//  DatabaseManager.swift
+//  Dukach
+//
+//  Created by Illia Marchenko on 14.07.2023.
+//
+
+import Foundation
diff --git a/Dukach/SceneDelegate.swift b/Dukach/SceneDelegate.swift
index 3c535c4..dd9d9be 100644
--- a/Dukach/SceneDelegate.swift
+++ b/Dukach/SceneDelegate.swift
@@ -11,32 +11,14 @@ class SceneDelegate: UIResponder, UIWindowSceneDelegate {
     func scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {
           
         
-//        authStateListener = Auth.auth().addStateDidChangeListener { (auth, user) in
-//            if user != nil {
-//                // Користувач авторизований, встановлюємо головний контролер додатка
-//                let mainViewController = ViewController()
-//                self.window?.rootViewController = mainViewController
-//            } else {
-//                // Користувач не авторизований, встановлюємо контролер авторизації
-//                let authViewController = AuthViewController()
-//                authViewController.delegate = self
-//                self.window?.rootViewController = authViewController
-//            }
-//
-//            self.window?.makeKeyAndVisible()
-//        }
-//
-      
-     
-//
-        
-        
         Auth.auth().addStateDidChangeListener { (auth, user) in
             print ("try ")
             if user == nil{
 
-//                self.showModalAuth()
-                self.showAuth()
+                self.showModalAuth()
+                print ("showAuth ")
+
+//                self.showAuth()
 
             }else{
                print ("OnLine")
@@ -79,21 +61,26 @@ class SceneDelegate: UIResponder, UIWindowSceneDelegate {
         // to restore the scene back to its current state.
     }
 
-//    func showModalAuth(){
-//        let storyboard = UIStoryboard(name: "Main", bundle: nil)
-//        if let authViewController = storyboard.instantiateViewController(withIdentifier: String(describing: AuthViewController.self)) as? AuthViewController {
-//            self.window?.rootViewController?.present(authViewController, animated: true)
-//
-//        }
-//
-//            }
+    func showModalAuth(){
+        let storyboard = UIStoryboard(name: "Main", bundle: nil)
+        
+        if let authViewController = storyboard.instantiateViewController(withIdentifier: String(describing: AuthViewController.self)) as? AuthViewController {
+            authViewController.modalPresentationStyle = .fullScreen
+
+            self.window?.rootViewController?.present(authViewController, animated: true)
+//            navigationController?.pushViewController(authViewController, animated: true)
+
+        }
+            }
+    
+    
     func showAuth(){
         let storyboard = UIStoryboard(name: "Main", bundle: nil)
         if let authViewController = storyboard.instantiateViewController(withIdentifier: String(describing: AuthViewController.self)) as? AuthViewController {
             
 //            self.window?.rootViewController?.present(authViewController, animated: true)
             window?.rootViewController = authViewController
-            window?.makeKeyAndVisible()
+//            window?.makeKeyAndVisible()
         }
 
         
@@ -103,8 +90,20 @@ class SceneDelegate: UIResponder, UIWindowSceneDelegate {
 
 extension SceneDelegate: AuthDelegate {
     func userDidAuthenticate() {
-        let mainViewController = ViewController()
-        window?.rootViewController = mainViewController
+//        let mainViewController = ViewController()
+//        window?.rootViewController = mainViewController
+//        window?.makeKeyAndVisible()
+      
+        let storyboard = UIStoryboard(name: "Main", bundle: nil)
+        if let mainViewController = storyboard.instantiateViewController(withIdentifier: String(describing: ViewController.self)) as? ViewController {
+            
+//            self.window?.rootViewController?.present(authViewController, animated: true)
+            window?.rootViewController = mainViewController
+//            window?.makeKeyAndVisible()
+        }
+        
+        
+
     }
 
     func userDidSignOut() {
diff --git a/Dukach/ViewController.swift b/Dukach/ViewController.swift
index 18276a5..ea3136d 100644
--- a/Dukach/ViewController.swift
+++ b/Dukach/ViewController.swift
@@ -6,6 +6,7 @@
 //
 
 import UIKit
+import Firebase
 
 class ViewController: UIViewController  {
     
@@ -20,6 +21,13 @@ class ViewController: UIViewController  {
 //        super.viewDidAppear(animated)
 //    
 //    }
-
+    @IBAction func logOutButton(_ sender: Any) {
+        do{
+            try Auth.auth().signOut()
+        } catch{
+            print(error)
+        }
+    }
+    
 }
 
